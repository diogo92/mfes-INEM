class Inem
types
	-- An emergency that requires assistance pos indicates the position, patient refers to the person to be assisted
	-- and access indicates the quality/type of access to the position i.e. if it is a village with bad road access, a mountain.
	public Emergency::
		patient:Patient
		pos:Position
		access: <EASY>|<MODERATE>|<HARD>
		assignedHospital: Hospital;
	
values
instance variables
 public numHospitals : nat := 0;
-- List of on going emergencies
	public static emergencies : seq of Emergency :=[];
-- List of hospitals
	public static hospitals: seq of Hospital :=[];
	
operations
	public Inem: nat1 ==> Inem
			Inem(numOfHospitals) == (
				dcl i:nat;
					i:=1;
					while i<=numOfHospitals do(
						addHospital();
							i:=i+1;
							numHospitals := numHospitals+1;
							);
				return self;
			);
			
	
	-- assigns an hospital to assist an emergency
	public attendEmergency: Emergency ==>()
		attendEmergency(em) == (
			emergencies:=tl emergencies;
		)
		
		pre
		-- emergency must be in emergency list
			true
			
		post
		
		-- emergency is being attended, so it should be out of the emergency list
			true
		;
	
	public attendAllEmergencies:() ==>()
		attendAllEmergencies()==
		(
		
		);
		
	public addEmergency: Emergency ==>()
			addEmergency(em) == (
				emergencies:=emergencies^[em];
				numEmergencies:= numEmergencies+1;
	);
	
	public addHospital:()==>()
		addHospital()==(
			dcl nPatientCap:nat:=MATH`rand(19)+1;
			dcl nHospLevel:nat:=MATH`rand(2)+1;
			dcl nMedics:nat:=MATH`rand(14)+1;
			dcl nVehicles:nat:=MATH`rand(9)+1;
			hospitals:=hospitals^[new Hospital(nPatientCap,nHospLevel,nMedics,nVehicles)];
	);
	
	-- checks the hospital best suited to attend an emergency, given the location and condition of the patient 
	
	--public bestHospital: Emergency ==> Hospital
	--	bestHospital(em) == (
	--		for e in set elems hospitals do(
	--			if inRange(hospitals[e].location,em.pos) then
	--		)
	--	);
		
		
		-- Checks if two positions have a small distance between them
		public inRange: Position * Position ==> bool
			inRange(p1,p2) == (
				return p1.getDistanceTo(p2)< 25 
			);
functions
	
traces

end Inem